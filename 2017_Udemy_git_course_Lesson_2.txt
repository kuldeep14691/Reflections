GIT commands learned
--------------------
git log:
  git log --graph --oneline branch_name_01 branch_name_02 (to display graph of commits)
  
    
git diff
git checkout:
  Syntax- git checkout commit_id
          This will make the mentioned commit id as your current version of repository. This means your repository will be back tracked to 
          the old version of mentioned commit.
git clone:
  Syntax- git clone url_of_repository
git branch branch_name:
  To create a branch of your current repository.
  git branch_name -d branch_name:  To delete a branch add -d parameter like this.
  To list out all branches- 1. git branch (without any parameter), 2.git branch -r

git merge branch_01 branch_02:
  This command would merge the mentioned commits to one final version. To merge anything to master branch mention name as "master".

git show commit_id:
  To see the changes committed in commit id
git add  |    Add a file to the staging area
git commit  |    Commit the files from the staging area to the repository 
git diff --staged  |    Compare the staging area with the repository
git reset --hard  |    Undo all changes! There is no rollback for this, so be carefull!
git checkout master  |    Restore the "Head" to the latest check-in (this will be part of a later lesson/module)
git log --graph --oneline <branch1> <branch2>  |    Show a visual representation of the commit history within different branches
git checkout -b new_branch_name  |    Creates a new branch and do a checkout on this branch in one call instead of git branch new_branch_name and git checkout new_branch_name
git merge branch1 branch2  |    Merge two branches, branch2 get merged into branch1
git branch -d name  |    Remove the branch with the specified name
git show commitId  |    Show the changes made in this commit compared to the previous version. This is working even after merging.
git remote  |    Show all remote locations for the repository
git remote add origin url |     Add a new remote location for the repository. Origin is the default name to use when you create only one remote location. Url should be the https url to the github repository.
git remove -v  |    Outputs the remote locations with verbose information (fetch and push urls)
git push origin master  |    Push the master branch to the remote location origin.
git pull origin master  |    Get the master branch from the remote location origin.
git pull origin master  |    = Git fetch origin + git merge master origin/master
git fetch origin  |    Get the changes from the remote location into the (hidden?) origin/master branch
